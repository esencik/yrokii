# # Создайте класс Factory и внутри создайте 2 метода:
# #
# # a.Метод engine который возвращает строку "Двигатель создан"
# # b.Метод bridge который возвращает строку "Ходовая часть создана"
# #
# # Создайте класс Toyota который будет НАСЛЕДОВАТЬ класс Factory. В классе Toyota создайте методы wheels и windows.
# #
# # a.Метод wheels возвращает строку "Колёса готовы"
# #
# # b.Метод windows возвращает строку "Стёкла готовы"
# #
# # Из класса Toyota вызовите все методы, методы вернут вам строки(объекты)
# #
# # Результат каждого метода вставьте в лист
#
# class Factory:
#     engine = 'Двигатель создан'
#     bridge = 'Ходовая часть создана'
#
#     def __init__(self):
#         self.engine = "engine"
#         self.bridge = "bridge"
#
#     def wheels(self):
#         return "Колеса готовы"
#
#     def windows(self):
#         return "Стекла готовы"
#
#
# class Toyota(Factory):
#     pass
#
# y = Toyota()
# p = y.wheels()
# pr = y.windows()
# l = [p, pr]
# print(l)
#
#
#
# # 1.Создайте Класс Zoo.
# #
# # 2.Инициализируйте класс в объект.
# #
# # 3.К объекту Zoo добавьте атрибут animal_1 и присвойте ему значение "Тигр"
# #
# # 4.К объекту Zoo добавьте атрибут animal_2 и присвойте ему значение "Бегемот"
# #
# # 5.К объекту Zoo добавьте атрибут animal_3 и присвойте ему значение "Жираф"
# #
# # 6.В объекте Zoo измените значение атрибута animal_1 и присвойте ему значение "Лев".
# #
# # 7.К объекту Zoo добавьте атрибут animal_4 и присвойте ему list состоящий из animal_2 и animal_3
# #
# # 8.В объекте Zoo измените значение атрибута animal_3 и присвойте ему значение "Змея".
# #
# class Zoo:
#     def __init__(self):
#         self.animal_1 = 'Тигр'
#         self.animal_2 = 'Бегемот'
#         self.animal_3 = 'Жираф'
#
# z = Zoo()
# z.animal_1 = "Лев"
# print(z.animal_1)
#
# a = z.animal_1 = [z.animal_2,z.animal_3]
# print(a)
#
# z.animal_3 = 'Змея'
# print(z.animal_3)


